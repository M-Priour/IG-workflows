#Publication IG/NOS
# Creation d'un dossier NOS => package_list
# Git clone le projet FIG-ANS-relase
# git submodule update --init --recursive
#Publication request à créer à chaque fois ou adapter (publication-request.json) / doit être quelque par
#https://confluence.hl7.org/display/FHIR/IG+Publication+Request+Documentation
#Repousse dans FIGans realses
#java -jar /Library/WebServer/Documents/FIG_ans-ig-release/publisher.jar -go-publish -source /Users/nicolasriss/Desktop/ANSFORGE_ans-ig/IG-NOS -web /Library/WebServer/Documents/FIG_ans-ig-release/www/ig -registry /Library/WebServer/Documents/FIG_ans-ig-release/ig-registry/fhir-ig-list.json -history /Library/WebServer/Documents/FIG_ans-ig-release/fhir-ig-history-template -templates /Library/WebServer/Documents/FIG_ans-ig-release/www/templates -temp /Library/WebServer/Documents/tmp



name: Release

on:
  workflow_call:
  workflow_dispatch:


jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/checkout@v3
        with:      
          path: ig
          
      # Install .NET runtime
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.x.x'
      
      # Install Java runtime (only needed if you want to run the offical HL7 Java validator)
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'    
      - name : firely 
        run : dotnet tool install --global Firely.Terminal --version 3.0.0
        
      - name: Check Firely Terminal Version
        run: |
          CHECK_FIRELY_TERMINAL_VERSION=$(fhir -v | tr '\n' ' ') # Print everything in a single line
          echo "FIRELY_TERMINAL_VERSION: $CHECK_FIRELY_TERMINAL_VERSION"
        
      - name: Run bake  ans.annuaire.fhir.r4
        run: |
          fhir install ans.annuaire.fhir.r4 0.2.0
          fhir bake --package ans.annuaire.fhir.r4
      - name: Run bake hl7.fhir.fr.core
        run: |
          fhir install hl7.fhir.fr.core 1.1.0
          fhir bake --package hl7.fhir.fr.core
          
      # Persist the FHIR Package Cache between runners.
      # Doc: https://confluence.hl7.org/display/FHIR/FHIR+Package+Cache
      - name: 🗂️ Cache FHIR Packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.fhir/packages
          key: fhir-packages

      - name: Install modules
        run: npm install -g fsh-sushi
      - name: Run sushi
        run: sushi .
        
      # Persist the IG Publisher input-cache between runners.
      # Doc: https://build.fhir.org/ig/FHIR/ig-guidance/using-templates.html#igroot-input-cache
      - name: 🗂️ Cache IG Publisher input-cache
        uses: actions/cache@v2
        with:
          path: |
            igs/${{ env.IG }}/input-cache
          key: ig-publisher-input-cache           

      # Downloads the newest version of the IG Publisher, this could probable be cached.
      - name: 📥 Download IG Publisher
        run: wget -q https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar
        
        

      # Gets the IG's id and version from the sushi-config.yaml file, this is needed to create the unique package/release name.
      - name: 🆔 Get Id and Version
        uses: CumulusDS/get-yaml-paths-action@v0.1.1
        id: sushi_config
        with:
          file: sushi-config.yaml
          id: id
          version: version
          releaseLabel: releaseLabel

      # Creates the tag as a new environmnet variable with the format: {package-id}-{version}
      - name: 🏷️ Determine Release tag
        run: echo "TAG=${{ steps.sushi_config.outputs.id }}-${{ steps.sushi_config.outputs.version }}" >> $GITHUB_ENV

      # Checks if the Release already exists, if it does we do not want to overwrite it because a release should be immutable.
      - name: 🏷️ Check if Release tag already exists
        uses: mukunku/tag-exists-action@v1.0.0
        id: check_tag
        with: 
          tag: ${{ env.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Fetches the changelog-entry for the version, this will be used to describe the release.
      # Will fail the workflow if an entry is missing, this is intentional behavior.
      - name: 📄 Get Changelog Entry
        uses: mindsers/changelog-reader-action@v2
        if: ${{ steps.check_tag.outputs.exists == 'false' && steps.sushi_config.outputs.releaseLabel == 'release' }}
        id: changelog
        with:
          path: input/pagecontent/CHANGELOG.md
          version: ${{ steps.sushi_config.outputs.version }}

      # Downloads the newest version of the IG Publisher, this could probable be cached.
      - name: 📥 Download IG Publisher
        if: ${{ steps.check_tag.outputs.exists == 'false' && steps.sushi_config.outputs.releaseLabel == 'release' }}
        run: wget -q https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar

      # Builds the NPM Package for distribution.
      - name: 🏃‍♂️ Run IG Publisher
        if: ${{ steps.check_tag.outputs.exists == 'false' && steps.sushi_config.outputs.releaseLabel == 'release' }}
        run : java -Xmx8192m -jar publisher.jar publisher -ig .  -publish https://github.io/

      # A commit-tag is needed when creating a release.
      # This step will push a new tag on the current commit, unless it already exists.
      - name: 🏷️ Push Release Tag
        uses: actions-ecosystem/action-push-tag@v1
        if: ${{ steps.check_tag.outputs.exists == 'false' && steps.sushi_config.outputs.releaseLabel == 'release' }}
        with:
          tag: ${{ env.TAG }}

      # Creates a new GitHub Release with a NPM Package containing the FHIR Profiles, unless it already exists.
      # This package is ready to be published to the FHIR Package Registry.
      - name: 📦 Create Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.check_tag.outputs.exists == 'false' && steps.sushi_config.outputs.releaseLabel == 'release' }}
        with:
          name:  v${{ steps.sushi_config.outputs.version }}
          tag_name: ${{ env.TAG }}
          body: ${{ steps.changelog.outputs.changes }}
          fail_on_unmatched_files: true
          files: |
            output/full-ig.zip
            output/package.tgz
